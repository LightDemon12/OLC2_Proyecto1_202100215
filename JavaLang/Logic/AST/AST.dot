digraph AST {
  rankdir=TB;
  node [fontname="Arial, sans-serif", style=filled, shape=box, fillcolor="#E8F5E9"];
  edge [fontname="Arial, sans-serif", color="#555555", arrowsize=0.7];
  graph [fontname="Arial, sans-serif", labelloc=t, fontsize=16];
  label="AST - Árbol de Sintaxis Abstracta";
  splines=ortho;
  concentrate=true;

  node_0 [label="PROGRAM"];
  node_1 [label="bloque_main"];
  node_0 -> node_1;
  node_2 [label="INSTRUCCIONES"];
  node_1 -> node_2;
  node_3 [label="IF_SIMPLE"];
  node_2 -> node_3;
  node_4 [label="CONDICION"];
  node_3 -> node_4;
  node_5 [label="EXPRESION_BINARIA\n\>"];
  node_4 -> node_5;
  node_6 [label="IDENTIFIER\nx"];
  node_5 -> node_6;
  node_7 [label="DATO"];
  node_5 -> node_7;
  node_8 [label="INT_LITERAL\n5"];
  node_7 -> node_8;
  node_9 [label="BLOQUE_IF"];
  node_3 -> node_9;
  node_10 [label="INSTRUCCIONES"];
  node_9 -> node_10;
  node_11 [label="SOUT"];
  node_10 -> node_11;
  node_12 [label="DATO"];
  node_11 -> node_12;
  node_13 [label="STRING_LITERAL\nMayor"];
  node_12 -> node_13;
  node_14 [label="IF_CON_ELSE"];
  node_2 -> node_14;
  node_15 [label="CONDICION"];
  node_14 -> node_15;
  node_16 [label="EXPRESION_BINARIA\n\>="];
  node_15 -> node_16;
  node_17 [label="IDENTIFIER\nedad"];
  node_16 -> node_17;
  node_18 [label="DATO"];
  node_16 -> node_18;
  node_19 [label="INT_LITERAL\n18"];
  node_18 -> node_19;
  node_20 [label="BLOQUE_IF"];
  node_14 -> node_20;
  node_21 [label="INSTRUCCIONES"];
  node_20 -> node_21;
  node_22 [label="SOUT"];
  node_21 -> node_22;
  node_23 [label="DATO"];
  node_22 -> node_23;
  node_24 [label="STRING_LITERAL\nAdulto"];
  node_23 -> node_24;
  node_25 [label="BLOQUE_ELSE"];
  node_14 -> node_25;
  node_26 [label="INSTRUCCIONES"];
  node_25 -> node_26;
  node_27 [label="SOUT"];
  node_26 -> node_27;
  node_28 [label="DATO"];
  node_27 -> node_28;
  node_29 [label="STRING_LITERAL\nMenor"];
  node_28 -> node_29;
  node_30 [label="IF_CON_ELSE_IF"];
  node_2 -> node_30;
  node_31 [label="CONDICION"];
  node_30 -> node_31;
  node_32 [label="EXPRESION_BINARIA\n\>="];
  node_31 -> node_32;
  node_33 [label="IDENTIFIER\nnota"];
  node_32 -> node_33;
  node_34 [label="DATO"];
  node_32 -> node_34;
  node_35 [label="INT_LITERAL\n90"];
  node_34 -> node_35;
  node_36 [label="BLOQUE_IF"];
  node_30 -> node_36;
  node_37 [label="INSTRUCCIONES"];
  node_36 -> node_37;
  node_38 [label="SOUT"];
  node_37 -> node_38;
  node_39 [label="DATO"];
  node_38 -> node_39;
  node_40 [label="STRING_LITERAL\nA"];
  node_39 -> node_40;
  node_41 [label="LISTA_ELSE_IF"];
  node_30 -> node_41;
  node_42 [label="ELSE_IF"];
  node_41 -> node_42;
  node_43 [label="CONDICION_ELSE_IF"];
  node_42 -> node_43;
  node_44 [label="EXPRESION_BINARIA\n\>="];
  node_43 -> node_44;
  node_45 [label="IDENTIFIER\nnota"];
  node_44 -> node_45;
  node_46 [label="DATO"];
  node_44 -> node_46;
  node_47 [label="INT_LITERAL\n80"];
  node_46 -> node_47;
  node_48 [label="BLOQUE_ELSE_IF"];
  node_42 -> node_48;
  node_49 [label="INSTRUCCIONES"];
  node_48 -> node_49;
  node_50 [label="SOUT"];
  node_49 -> node_50;
  node_51 [label="DATO"];
  node_50 -> node_51;
  node_52 [label="STRING_LITERAL\nB"];
  node_51 -> node_52;
  node_53 [label="ELSE_IF"];
  node_41 -> node_53;
  node_54 [label="CONDICION_ELSE_IF"];
  node_53 -> node_54;
  node_55 [label="EXPRESION_BINARIA\n\>="];
  node_54 -> node_55;
  node_56 [label="IDENTIFIER\nnota"];
  node_55 -> node_56;
  node_57 [label="DATO"];
  node_55 -> node_57;
  node_58 [label="INT_LITERAL\n70"];
  node_57 -> node_58;
  node_59 [label="BLOQUE_ELSE_IF"];
  node_53 -> node_59;
  node_60 [label="INSTRUCCIONES"];
  node_59 -> node_60;
  node_61 [label="SOUT"];
  node_60 -> node_61;
  node_62 [label="DATO"];
  node_61 -> node_62;
  node_63 [label="STRING_LITERAL\nC"];
  node_62 -> node_63;
  node_64 [label="BLOQUE_ELSE"];
  node_30 -> node_64;
  node_65 [label="INSTRUCCIONES"];
  node_64 -> node_65;
  node_66 [label="SOUT"];
  node_65 -> node_66;
  node_67 [label="DATO"];
  node_66 -> node_67;
  node_68 [label="STRING_LITERAL\nF"];
  node_67 -> node_68;
  node_69 [label="IF_SIMPLE"];
  node_2 -> node_69;
  node_70 [label="CONDICION"];
  node_69 -> node_70;
  node_71 [label="EXPRESION_BINARIA\n\>"];
  node_70 -> node_71;
  node_72 [label="IDENTIFIER\nx"];
  node_71 -> node_72;
  node_73 [label="DATO"];
  node_71 -> node_73;
  node_74 [label="INT_LITERAL\n0"];
  node_73 -> node_74;
  node_75 [label="BLOQUE_IF"];
  node_69 -> node_75;
  node_76 [label="INSTRUCCIONES"];
  node_75 -> node_76;
  node_77 [label="IF_SIMPLE"];
  node_76 -> node_77;
  node_78 [label="CONDICION"];
  node_77 -> node_78;
  node_79 [label="EXPRESION_BINARIA\n\<"];
  node_78 -> node_79;
  node_80 [label="IDENTIFIER\ny"];
  node_79 -> node_80;
  node_81 [label="DATO"];
  node_79 -> node_81;
  node_82 [label="INT_LITERAL\n10"];
  node_81 -> node_82;
  node_83 [label="BLOQUE_IF"];
  node_77 -> node_83;
  node_84 [label="INSTRUCCIONES"];
  node_83 -> node_84;
  node_85 [label="SOUT"];
  node_84 -> node_85;
  node_86 [label="DATO"];
  node_85 -> node_86;
  node_87 [label="STRING_LITERAL\nx positivo y y menor que 10"];
  node_86 -> node_87;

}
